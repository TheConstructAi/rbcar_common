<?xml version="1.0"?>
  <robot name="roborder"
    xmlns:xacro="http://wiki.ros.org/xacro">

	<!-- ***************** -->
	<!-- Imported elements -->
	<!-- ***************** -->

	<!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->

	<!-- Import Robotnik CAR base elements -->
	<xacro:include filename="$(find rbcar_description)/urdf/bases/rbcar_base.urdf.xacro" />

	<!-- Import Robotnik CAR wheels -->
	<!-- <xacro:include filename="$(find rbcar_description)/urdf/wheels/suspension_wheel_v3.urdf.xacro" /> -->
  <xacro:include filename="$(find rbcar_description)/urdf/common/macros.xacro" />
  <xacro:include filename="$(find rbcar_description)/urdf/wheels/wheels.xacro" />
  
	
	<xacro:include filename="$(find rbcar_description)/urdf/structures/elevator.urdf.xacro" />

	<!-- Import all available sensors -->
	<xacro:include filename="$(find robotnik_sensors)/urdf/all_sensors.urdf.xacro" />
  <xacro:include filename="$(find robotnik_sensors)/urdf/utils/inertia.urdf.xacro" />

  <!-- Common Parameters and macros -->
  <xacro:include filename="$(find rbcar_description)/urdf/common/materials.xacro" />

	<!-- ***************** -->
	<!-- Global parameters -->
	<!-- ***************** -->

	<xacro:property name="PI" value="3.1415926535897931"/>

	<!-- Wheel parameters -->
	<xacro:property name="wheel_offset_x" value="0.91131" />    <!-- x,y,z in translation from base_link to the center of the wheel -->
	<xacro:property name="wheel_offset_y" value="0.62124" />
	<xacro:property name="wheel_offset_z" value="0.0" />

	<!-- Flag to select the high or low quality model -->
	<xacro:property name="hq" value="true" />

  <!-- Argument for Setting the Wheel Ackerman visual help Is set as argument in the Wheels.xacro, so take that into account-->
  

	<!-- *************** -->
	<!-- Robots Elements -->
	<!-- *************** -->

	<!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->

	<!-- RB CAR BASE -->
	<xacro:rbcar_base name="roborder" publish_bf="true" hq="${hq}" />

	<!-- Gazebo ros control pluggins -->
	<xacro:ros_control/>

  <!-- xacro:omni_steering prefix="" publish_tf="true"/-->

	<!-- Gazebo skid steering pluggins -->
	<!-- xacro:skid_steering broadcastOdomTF="1"/ -->

	<!-- WHEELS -->

  <!-- Wheels -->



  
  <!-- <xacro:front_wheel lr_prefix="left" fr_prefix="front"
                     lr_reflect="1" fr_reflect="1" parent="base_link" />
  <xacro:front_wheel lr_prefix="right" fr_prefix="front"
                     lr_reflect="-1" fr_reflect="1" parent="base_link" />
  <xacro:rear_wheel lr_prefix="left" fr_prefix="rear"
                    lr_reflect="1" fr_reflect="-1" parent="base_link" />
  <xacro:rear_wheel lr_prefix="right" fr_prefix="rear"
                    lr_reflect="-1" fr_reflect="-1" parent="base_link" />    -->

	<!-- SENSORS -->

  <!-- <xacro:elevator parent="base_link" fixed_elevator="false">
		<origin xyz="0.0 0.0 0.6" rpy="0 0 0"/>
	</xacro:elevator> -->

  <xacro:sensor_imu_hector prefix="imu" parent="base_link">
		<origin xyz="0.0 0.0 0.170" rpy="0 0 0"/>
	</xacro:sensor_imu_hector>

	<xacro:sensor_gps prefix="gps" parent="base_link" gps_latitude="$(arg gps_latitude)" gps_longitude="$(arg gps_longitude)" update_rate="20" >
		<origin xyz="0.0 0 0.0" rpy="0 0 0"/>
	</xacro:sensor_gps>

  <!-- The Solid State Lydars in Four directions Front , Rear, Left and Right-->
  <!-- <xacro:sensor_benewake_ce30d prefix="front_ss_lidar" parent="base_link" prefix_topic='front_ss_lidar' gpu="false">
      <origin xyz="2.155 0.0 0.236" rpy="0 0 0"/>
  </xacro:sensor_benewake_ce30d>

  <xacro:sensor_benewake_ce30d prefix="back_ss_lidar" parent="base_link" prefix_topic='back_ss_lidar' gpu="false">
      <origin xyz="-0.1 0.0 0.236" rpy="0 0 3.14"/>
  </xacro:sensor_benewake_ce30d>

  <xacro:sensor_benewake_ce30d prefix="left_ss_lidar" parent="base_link" prefix_topic='left_ss_lidar' gpu="false">
      <origin xyz="1.0 -0.7 0.236" rpy="0 0 -1.52"/>
  </xacro:sensor_benewake_ce30d>

  <xacro:sensor_benewake_ce30d prefix="right_ss_lidar" parent="base_link" prefix_topic='right_ss_lidar' gpu="false">
      <origin xyz="1.0 0.7 0.236" rpy="0 0 1.52"/>
  </xacro:sensor_benewake_ce30d> -->

  <!-- <xacro:sensor_axis_q8641 prefix="front_ptz_camera" parent="base_link" far="300" near="0.08">
    <origin xyz="0 0 2.0" rpy="0 0 0"/>
  </xacro:sensor_axis_q8641> -->

  <xacro:sensor_hokuyo_utm30lx prefix="hokuyo_front_laser" parent="base_link" prefix_topic='hokuyo_front_laser' gpu="false" min_angle="-1.57" max_angle="1.57">
      <origin xyz="2.22193 0.0 0.055082" rpy="0 0 0"/>
  </xacro:sensor_hokuyo_utm30lx>

  <!-- Adding Sensors for navigation - and autonomous driving . Custom vvalues due to instability of version 16-->
  <!-- <xacro:sensor_rslidar prefix="rslidar" parent="elevator_link" prefix_topic="rslidar" range_min="0.2" range_max="50.0" hfov="360.0" hres="0.4" vfov="30.0" vres="0.8" fps="2.0" gpu="true">
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </xacro:sensor_rslidar> -->

  <xacro:sensor_mpc3_bosch prefix="ueye_rgb_camera" parent="base_link">
      <origin xyz="1.32236 0.013835 1.48042" rpy="0 0 0"/>
  </xacro:sensor_mpc3_bosch>


<!-- <gazebo>
<plugin name="ground_truth_controller" filename="librobotnik_gazebo_ground_truth_odom.so">
  <alwaysOn>true</alwaysOn>
  <updateRate>50.0</updateRate>
  <bodyName>base_link</bodyName>
  <frameName>base_footprint_gt</frameName>
  <worldBodyName>world</worldBodyName>
  <worldFrameName>odom</worldFrameName>
  <topicName>odom_gt</topicName>
  <gaussianNoise>0.01</gaussianNoise>
  <xyzOffset>0.0 0 0</xyzOffset>
  <rpyOffset>0 0 0</rpyOffset>
  <applyOffset>False</applyOffset>
  <broadcastTF>True</broadcastTF>
</plugin>
</gazebo> -->

<gazebo>
<plugin name="ground_truth_controller" filename="librobotnik_gazebo_ground_truth_odom.so">
  <alwaysOn>true</alwaysOn>
  <updateRate>50.0</updateRate>
  <bodyName>base_footprint</bodyName>
  <frameName>base_footprint</frameName>
  <worldBodyName>world</worldBodyName>
  <worldFrameName>odom</worldFrameName>
  <topicName>odom</topicName>
  <gaussianNoise>0.01</gaussianNoise>
  <xyzOffset>0.0 0 0</xyzOffset>
  <rpyOffset>0 0 0</rpyOffset>
  <applyOffset>False</applyOffset>
  <broadcastTF>True</broadcastTF>
</plugin>
</gazebo>

<!-- <gazebo>
<plugin name="gps_ground_truth_controller" filename="librobotnik_gazebo_ground_truth_odom.so">
  <alwaysOn>true</alwaysOn>
  <updateRate>50.0</updateRate>
  <bodyName>base_footprint</bodyName>
  <frameName>base_footprint</frameName>
  <worldBodyName>world</worldBodyName>
  <worldFrameName>world</worldFrameName>
  <topicName>odom</topicName>
  <gaussianNoise>0.01</gaussianNoise>
  <xyzOffset>0.0 0 0</xyzOffset>
  <rpyOffset>0 0 0</rpyOffset>
  <applyOffset>False</applyOffset>
  <broadcastTF>True</broadcastTF>
</plugin>
</gazebo> -->


<!-- <gazebo>
  <plugin name="ground_truth" filename="libgazebo_ros_p3d.so">
    <frameName>odom</frameName>
    <bodyName>base_footprint</bodyName>
    <topicName>odom</topicName>
    <updateRate>30.0</updateRate>
    <gaussianNoise>0.0</gaussianNoise>
  </plugin>
</gazebo> -->


</robot>
